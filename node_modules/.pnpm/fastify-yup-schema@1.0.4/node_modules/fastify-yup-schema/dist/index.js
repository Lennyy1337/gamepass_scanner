"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createYupSchema = exports.fastifyYupSchema = void 0;
const fastify_plugin_1 = __importDefault(require("fastify-plugin"));
const yup = __importStar(require("yup"));
const yupDefaultOptions = {
    strict: false,
    abortEarly: false,
    stripUnknown: true,
    recursive: true,
};
const createYupValidatorCompiler = (yupOptions = yupDefaultOptions) => ({ schema }) => (data) => {
    try {
        const result = schema.validateSync(data, yupOptions);
        return { value: result };
    }
    catch (error) {
        return { error };
    }
};
const fastifyYupSchemaPlugin = (fastify, options, done) => {
    const yupValidatorCompiler = createYupValidatorCompiler(options);
    fastify.setValidatorCompiler(yupValidatorCompiler);
    done();
};
exports.fastifyYupSchema = fastify_plugin_1.default(fastifyYupSchemaPlugin);
const createYupSchema = (callBack) => callBack(yup);
exports.createYupSchema = createYupSchema;
//# sourceMappingURL=index.js.map